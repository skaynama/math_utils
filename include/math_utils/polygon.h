/**
* Software License Agreement (BSD License)
*
*  Copyright (c) 2016, all rights reserved.
*
*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
*  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
*  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
*  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
*  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
*  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
*  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
*  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
*  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
*  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
*  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
*  POSSIBILITY OF SUCH DAMAGE.
*
* Author: Shahab Kaynama
*/
#ifndef MATH_UTILS_POLYGON_H
#define MATH_UTILS_POLYGON_H

#include <vector>
#include "math_utils/point.h"

class Polygon
{
public:
  // TODO assumes convexity
  Polygon();
  Polygon(size_t size);
  addVertex(const Point& pt);
  std::vector<Point> getVertices();
  bool isInside(const Point& pt);

private:
  void getLine(const Point& pt1, const Point& pt2,
    std::vector<double>& normal, double& distance);

  std::vector<Point> poly_;
};

#endif  // MATH_UTILS_POLYGON_H
